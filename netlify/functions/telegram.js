export const handler = async (event) => {
	try {
		const token = "7716038351:AAHoS7TU2CowMVuH3leMpdFaaxgbJu-eUcs"; // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
		const chatId = "-1001449215447";  // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Chat ID
		const data = JSON.parse(event.body);

		const dataArray = Object.entries(data);
		let message = `üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!\n\n`;

		for (const [key, value] of dataArray) {
			message += `\n‚úÖ ${key}: ${value}`;
		}

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
		await sendReminderOptions(chatId, message);

		return { statusCode: 200, body: "OK" };
	} catch (error) {
		return { statusCode: 500, body: error.toString() };
	}
};

const sendReminderOptions = async (chatId, originalMessage) => {
	const url = `https://api.telegram.org/bot${token}/sendMessage`;
	const options = {
		reply_markup: {
			inline_keyboard: [
				[
					{ text: "–û–∫", callback_data: "ok" },
					{ text: "–ù–∞–ø–æ–º–Ω–∏—Ç—å —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç", callback_data: "remind_5min" },
					{ text: "–ù–∞–ø–æ–º–Ω–∏—Ç—å —á–µ—Ä–µ–∑ 1 —á–∞—Å", callback_data: "remind_1hour" },
				],
				[
					{ text: "–ù–∞–ø–æ–º–Ω–∏—Ç—å –∑–∞–≤—Ç—Ä–∞", callback_data: "remind_tomorrow" },
					{ text: "–ù–∞–ø–æ–º–Ω–∏—Ç—å –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è", callback_data: "remind_custom" },
				],
			],
		},
	};

	await fetch(url, {
		method: "POST",
		headers: { "Content-Type": "application/json" },
		body: JSON.stringify({
			chat_id: chatId,
			text: originalMessage,
			...options,
		}),
	});
};
